openapi: 3.0.3
info:
  title: SamBring
  version: 0.1.0
  description: Last mile delivery using cars already on the road.
paths:
  /api/auth/change-password/:
    post:
      operationId: change_password
      summary: Change current user's password
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/auth/login/:
    post:
      operationId: login
      summary: Log in with email and password
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/logout/:
    post:
      operationId: logout
      summary: Log out current user
      tags:
      - Auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/auth/signup/:
    post:
      operationId: signup
      summary: 'Create a new user (optional: attach UserRole)'
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Signup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/confirm_delivery/:
    post:
      operationId: confirm_delivery
      summary: Confirm a quoted delivery and create Delivery/Package records
      tags:
      - Deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmDeliveryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmDeliveryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmDeliveryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmDeliveryResponse'
          description: ''
  /api/driver/deliveries/:
    get:
      operationId: driver_deliveries
      description: Retrieve all deliveries assigned to the authenticated driver with
        filtering options
      summary: Get driver deliveries
      parameters:
      - in: query
        name: filter
        schema:
          type: string
          enum:
          - future
          - past
        description: 'Filter deliveries by time: ''future'' (default) or ''past'''
      tags:
      - Driver Deliveries
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverDeliveryItem'
          description: ''
  /api/driver/profile/:
    get:
      operationId: driver_profile
      summary: Get the authenticated user's driver profile
      tags:
      - Driver
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
  /api/packages/{package_id}/deliver/:
    post:
      operationId: mark_package_delivered
      description: Mark a package as delivered by the authenticated driver
      summary: Mark package as delivered
      parameters:
      - in: path
        name: package_id
        schema:
          type: integer
        required: true
      tags:
      - Package Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PackageDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PackageDelivery'
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageDelivery'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request - missing required fields
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Forbidden - not assigned to package or not a driver
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Package not found
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Internal server error
          description: ''
  /api/packages/{package_id}/pickup/:
    post:
      operationId: mark_package_picked_up
      description: Mark a package as picked up by the authenticated driver
      summary: Mark package as picked up
      parameters:
      - in: path
        name: package_id
        schema:
          type: integer
        required: true
      tags:
      - Package Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageStatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PackageStatusUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PackageStatusUpdate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageStatusUpdate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Forbidden - not assigned to package or not a driver
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Package not found
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Internal server error
          description: ''
  /api/packages/assign_package/:
    post:
      operationId: packages_assign_package
      summary: Assign a package to the authenticated driver's account
      tags:
      - Deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignPackageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignPackageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignPackageRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/packages/available_packages/:
    get:
      operationId: packages_available_packages
      description: Return all packages without an assigned driver, grouped by delivery.
      summary: List available (unassigned) packages grouped by delivery
      tags:
      - Deliveries
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnassignedPackagesByDelivery'
          description: ''
  /api/request_delivery/:
    post:
      operationId: request_delivery
      summary: Request delivery price options
      tags:
      - Deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryQuoteResponse'
          description: ''
  /api/status_delivery/:
    get:
      operationId: status_delivery
      description: Get delivery status and packages by UUID.
      summary: Get delivery status by UUID
      parameters:
      - in: query
        name: uuid
        schema:
          type: string
        description: UUID of the delivery to check status
        required: true
      tags:
      - Deliveries
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryStatus'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Delivery not found
          description: ''
  /dashboard/api/user-signups/:
    get:
      operationId: dashboard_api_user_signups_list
      tags:
      - dashboard
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSignupStats'
          description: ''
components:
  schemas:
    Actor:
      type: object
      description: Serializer for Actor model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        address_line1:
          type: string
          title: Address Line 1
          maxLength: 255
        address_line2:
          type: string
          title: Address Line 2
          maxLength: 255
        zip_code:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 100
        address_country:
          type: integer
          nullable: true
          title: Country
        phone:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - id
      - name
    AssignPackageRequest:
      type: object
      properties:
        package_id:
          type: integer
      required:
      - package_id
    BlankEnum:
      enum:
      - ''
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password1:
          type: string
          writeOnly: true
        new_password2:
          type: string
          writeOnly: true
      required:
      - new_password1
      - new_password2
      - old_password
    ConfirmDeliveryRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        packages:
          type: array
          items:
            $ref: '#/components/schemas/ConfirmPackage'
        sender:
          type: integer
        pickup_location:
          type: string
        receiver:
          type: string
        receiver_phone:
          type: string
        delivery_location:
          type: string
        delivery_notes:
          type: string
        service:
          type: string
        price:
          type: integer
      required:
      - delivery_location
      - packages
      - price
      - receiver
      - receiver_phone
      - service
      - uuid
    ConfirmDeliveryResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        status:
          type: string
      required:
      - status
      - uuid
    ConfirmPackage:
      type: object
      properties:
        description:
          type: string
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        width:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        fragile:
          type: boolean
          default: false
        temperature:
          type: string
      required:
      - height
      - length
      - weight
      - width
    Delivery:
      type: object
      description: Serializer for Delivery model.
      properties:
        id:
          type: integer
          readOnly: true
        sender:
          allOf:
          - $ref: '#/components/schemas/Actor'
          readOnly: true
        receiver:
          allOf:
          - $ref: '#/components/schemas/Actor'
          readOnly: true
        pickup_date:
          type: string
          format: date
          nullable: true
          description: The pickup date of the delivery.
        pickup_time:
          type: string
          format: time
          nullable: true
          description: The pickup time of the delivery.
        delivery_date:
          type: string
          format: date
          nullable: true
          description: The delivery date of the delivery.
        delivery_time:
          type: string
          format: time
          nullable: true
          description: The delivery time of the delivery.
        pickup_location:
          type: string
          nullable: true
          description: The pickup location of the delivery.
          maxLength: 255
        delivery_location:
          type: string
          description: The delivery location of the delivery.
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - delivery_location
      - id
      - receiver
      - sender
      - updated_at
    DeliveryQuoteResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceQuote'
      required:
      - services
      - uuid
    DeliveryRequest:
      type: object
      properties:
        sender_zip_code:
          type: string
        receiver_zip_code:
          type: string
        packages:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRequestPackage'
      required:
      - packages
      - receiver_zip_code
      - sender_zip_code
    DeliveryRequestPackage:
      type: object
      properties:
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        width:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        fragile:
          type: boolean
          default: false
        temperature:
          type: string
      required:
      - height
      - length
      - weight
      - width
    DeliveryStatus:
      type: object
      description: Serializer for delivery status response.
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        sender_name:
          type: string
          readOnly: true
        receiver_name:
          type: string
          nullable: true
          description: Receiver contact name
          maxLength: 255
        receiver_phone:
          type: string
          nullable: true
          description: Receiver contact phone
          maxLength: 50
        pickup_location:
          type: string
          nullable: true
          description: The pickup location of the delivery.
          maxLength: 255
        pickup_date:
          type: string
          format: date
          nullable: true
          description: The pickup date of the delivery.
        pickup_time:
          type: string
          format: time
          nullable: true
          description: The pickup time of the delivery.
        delivery_location:
          type: string
          description: The delivery location of the delivery.
          maxLength: 255
        delivery_date:
          type: string
          format: date
          nullable: true
          description: The delivery date of the delivery.
        delivery_time:
          type: string
          format: time
          nullable: true
          description: The delivery time of the delivery.
        delivery_status:
          type: string
          nullable: true
          description: The status of the delivery.
          maxLength: 255
        delivery_notes:
          type: string
          nullable: true
          description: The notes of the delivery.
        service:
          type: string
          nullable: true
          description: The service of the delivery.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: The price of the delivery.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        packages:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryStatusPackage'
          readOnly: true
      required:
      - created_at
      - delivery_location
      - id
      - packages
      - sender_name
      - updated_at
      - uuid
    DeliveryStatusEnum:
      enum:
      - unprocessed
      - ready_for_pickup
      - picked_up
      - in_transit
      - delivered
      - cancelled
      - pending_assignment
      type: string
      description: |-
        * `unprocessed` - Unprocessed
        * `ready_for_pickup` - Ready for Pickup
        * `picked_up` - Picked Up
        * `in_transit` - In Transit
        * `delivered` - Delivered
        * `cancelled` - Cancelled
        * `pending_assignment` - Pending Assignment
    DeliveryStatusPackage:
      type: object
      description: Serializer for packages in delivery status response.
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          description: Optional description of the package or its contents.
          maxLength: 255
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
          description: Weight of the package.
        weight_unit:
          $ref: '#/components/schemas/WeightUnitEnum'
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Length of the package.
        width:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Width of the package.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Height of the package.
        dimension_unit:
          $ref: '#/components/schemas/DimensionUnitEnum'
        temperature_range:
          type: string
          description: Temperature range of the package.
          maxLength: 255
        temperature_unit:
          $ref: '#/components/schemas/TemperatureUnitEnum'
        volume:
          type: string
          format: decimal
          pattern: ^-?\d{0,11}(?:\.\d{0,4})?$
          nullable: true
          description: Volume of the package (auto-calculated if blank).
        fragile:
          type: boolean
          description: Indicates if the package is fragile.
        hazardous:
          type: boolean
          description: Indicates if the package contains hazardous materials.
        delivery_status:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatusEnum'
          description: |-
            The status of the package.

            * `unprocessed` - Unprocessed
            * `ready_for_pickup` - Ready for Pickup
            * `picked_up` - Picked Up
            * `in_transit` - In Transit
            * `delivered` - Delivered
            * `cancelled` - Cancelled
            * `pending_assignment` - Pending Assignment
        picked_up_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the package was picked up.
        delivered_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the package was delivered.
        delivered_to:
          type: string
          nullable: true
          description: The name of the person who received the package.
          maxLength: 255
        delivery_notes:
          type: string
          nullable: true
          description: The notes of the package.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - height
      - id
      - length
      - updated_at
      - weight
      - width
    DimensionUnitEnum:
      enum:
      - cm
      - m
      - in
      - ft
      type: string
      description: |-
        * `cm` - Centimeters
        * `m` - Meters
        * `in` - Inches
        * `ft` - Feet
    Driver:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        vehicle:
          allOf:
          - $ref: '#/components/schemas/Vehicle'
          readOnly: true
        license_number:
          type: string
          nullable: true
          description: Driver's license number.
          maxLength: 50
        phone:
          type: string
          nullable: true
          description: Contact phone number.
          maxLength: 20
        address:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether the driver is currently active and available for assignments.
        start_date:
          type: string
          format: date
          nullable: true
          description: The date when the driver started working.
        end_date:
          type: string
          format: date
          nullable: true
          description: The date when the driver stopped working.
        status:
          type: string
          nullable: true
          description: The status of the driver.
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - id
      - updated_at
      - user
      - vehicle
    DriverDeliveryItem:
      type: object
      description: Serializer for driver delivery items.
      properties:
        type:
          type: string
        delivery:
          $ref: '#/components/schemas/Delivery'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/Package'
        location:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
          nullable: true
        actor:
          $ref: '#/components/schemas/Actor'
        actor_type:
          type: string
        is_delivered:
          type: boolean
        pickup_location:
          type: string
          nullable: true
        pickup_date:
          type: string
          format: date
          nullable: true
        pickup_time:
          type: string
          format: time
          nullable: true
        pickup_actor:
          $ref: '#/components/schemas/Actor'
      required:
      - actor
      - actor_type
      - date
      - delivery
      - location
      - packages
      - time
      - type
    EngineTypeEnum:
      enum:
      - gasoline
      - diesel
      - electric
      - hybrid
      - other
      type: string
      description: |-
        * `gasoline` - Gasoline
        * `diesel` - Diesel
        * `electric` - Electric
        * `hybrid` - Hybrid
        * `other` - Other
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    NullEnum:
      enum:
      - null
    Package:
      type: object
      description: Serializer for Package model.
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          description: Optional description of the package or its contents.
          maxLength: 255
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
          description: Weight of the package.
        weight_unit:
          $ref: '#/components/schemas/WeightUnitEnum'
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Length of the package.
        width:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Width of the package.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Height of the package.
        dimension_unit:
          $ref: '#/components/schemas/DimensionUnitEnum'
        temperature_range:
          type: string
          description: Temperature range of the package.
          maxLength: 255
        temperature_unit:
          $ref: '#/components/schemas/TemperatureUnitEnum'
        volume:
          type: string
          format: decimal
          pattern: ^-?\d{0,11}(?:\.\d{0,4})?$
          nullable: true
          description: Volume of the package (auto-calculated if blank).
        fragile:
          type: boolean
          description: Indicates if the package is fragile.
        hazardous:
          type: boolean
          description: Indicates if the package contains hazardous materials.
        delivery_status:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatusEnum'
          description: |-
            The status of the package.

            * `unprocessed` - Unprocessed
            * `ready_for_pickup` - Ready for Pickup
            * `picked_up` - Picked Up
            * `in_transit` - In Transit
            * `delivered` - Delivered
            * `cancelled` - Cancelled
            * `pending_assignment` - Pending Assignment
        picked_up_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the package was picked up.
        delivered_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the package was delivered.
        delivered_to:
          type: string
          nullable: true
          description: The name of the person who received the package.
          maxLength: 255
        delivery_notes:
          type: string
          nullable: true
          description: The notes of the package.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - height
      - id
      - length
      - updated_at
      - weight
      - width
    PackageDelivery:
      type: object
      description: Serializer for package delivery requests and responses.
      properties:
        delivered_to:
          type: string
          maxLength: 255
        delivery_notes:
          type: string
          maxLength: 500
        success:
          type: boolean
        message:
          type: string
        new_status:
          type: string
        new_status_display:
          type: string
        delivered_at:
          type: string
    PackageStatusUpdate:
      type: object
      description: Serializer for package status update responses.
      properties:
        success:
          type: boolean
        message:
          type: string
        new_status:
          type: string
        new_status_display:
          type: string
        picked_up_at:
          type: string
      required:
      - message
      - new_status
      - new_status_display
      - success
    ServiceQuote:
      type: object
      properties:
        service:
          type: string
        price:
          type: integer
      required:
      - price
      - service
    Signup:
      type: object
      properties:
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
        actor_id:
          type: integer
        role_id:
          type: integer
      required:
      - email
      - password1
      - password2
    TemperatureUnitEnum:
      enum:
      - C
      - F
      type: string
      description: |-
        * `C` - Celsius
        * `F` - Fahrenheit
    UnassignedPackage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          description: Optional description of the package or its contents.
          maxLength: 255
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
          description: Weight of the package.
        weight_unit:
          $ref: '#/components/schemas/WeightUnitEnum'
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Length of the package.
        width:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Width of the package.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Height of the package.
        dimension_unit:
          $ref: '#/components/schemas/DimensionUnitEnum'
        temperature_range:
          type: string
          description: Temperature range of the package.
          maxLength: 255
        temperature_unit:
          $ref: '#/components/schemas/TemperatureUnitEnum'
        volume:
          type: string
          format: decimal
          pattern: ^-?\d{0,11}(?:\.\d{0,4})?$
          nullable: true
          description: Volume of the package (auto-calculated if blank).
        fragile:
          type: boolean
          description: Indicates if the package is fragile.
        hazardous:
          type: boolean
          description: Indicates if the package contains hazardous materials.
        delivery_status:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatusEnum'
          description: |-
            The status of the package.

            * `unprocessed` - Unprocessed
            * `ready_for_pickup` - Ready for Pickup
            * `picked_up` - Picked Up
            * `in_transit` - In Transit
            * `delivered` - Delivered
            * `cancelled` - Cancelled
            * `pending_assignment` - Pending Assignment
        picked_up_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the package was picked up.
        delivered_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the package was delivered.
        delivered_to:
          type: string
          nullable: true
          description: The name of the person who received the package.
          maxLength: 255
        delivery_notes:
          type: string
          nullable: true
          description: The notes of the package.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - height
      - id
      - length
      - updated_at
      - weight
      - width
    UnassignedPackagesByDelivery:
      type: object
      properties:
        delivery_id:
          type: integer
        uuid:
          type: string
          format: uuid
          nullable: true
        receiver_name:
          type: string
        receiver_phone:
          type: string
        pickup_location:
          type: string
        delivery_location:
          type: string
        service:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        packages:
          type: array
          items:
            $ref: '#/components/schemas/UnassignedPackage'
      required:
      - delivery_id
      - delivery_location
      - packages
      - uuid
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
    UserSignupStats:
      type: object
      properties:
        date:
          type: string
          format: date
        count:
          type: integer
      required:
      - count
      - date
    Vehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        make:
          type: string
          description: Vehicle manufacturer (e.g., Toyota, Ford).
          maxLength: 100
        model:
          type: string
          description: Vehicle model (e.g., Camry, F-150).
          maxLength: 100
        color:
          type: string
          description: Color of the vehicle.
          maxLength: 50
        license_plate:
          type: string
          description: License plate / registration number.
          maxLength: 20
        type:
          type: string
          description: Type of vehicle (e.g., car, truck, van).
          maxLength: 100
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Capacity of the vehicle in number of packages.
        maximum_total_weight_kg:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum total vehicle weight (GVWR) in kilograms.
        registration_year:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Registration year returned from vehicle registry.
        maximum_load_kg:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum permitted load in kilograms.
        next_eu_control_date:
          type: string
          format: date
          nullable: true
          description: Date for next EU roadworthiness control.
        engine_type:
          nullable: true
          description: |-
            Engine type.

            * `gasoline` - Gasoline
            * `diesel` - Diesel
            * `electric` - Electric
            * `hybrid` - Hybrid
            * `other` - Other
          oneOf:
          - $ref: '#/components/schemas/EngineTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - id
      - make
      - model
      - type
    WeightUnitEnum:
      enum:
      - kg
      - g
      - lb
      - oz
      type: string
      description: |-
        * `kg` - Kilograms
        * `g` - Grams
        * `lb` - Pounds
        * `oz` - Ounces
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
